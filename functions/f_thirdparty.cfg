
function externalDownlaod
{

    # URL to be passed from theme functions

    # mk a folder with the filename
    mk $file
    cd $file

    # Downloads file
    curl $url

    ### at this point we have just downloaded the file inside of a folder to keep the entire theme script folder more tidy

}

## function that combines others to install external
function ExternalTheme
{
    ## function to strip filename and extension type out of the URL
    stripFileInfo url

    ## Download the theme
    externalDownlaod

    # call to function moves theme files to the right location based on what is in the archive
    # themeMV - PROBLEM ... some archives have alot of extras ... wallpapers ... icon packs ..etc

    # ThemeMV is fine for theme pack files that do not have ANY extras 
}

function ExternalIcon
{
    ## function to strip filename and extension type out of the URL
    stripFileInfo url

    ## Download the theme
    externalDownlaod

    ## iconMV - call to function that runs the test on "gtk2" ...etc etc folders and puts the extracted files in the proper folders accordingly

}

#######################################################################
# Functions to move downloaded content to proper location, below


function themeMV
{
    # Detect contents of parent theme  folder (do something scalable)

    ## You should be in the theme's directory, set by a prior function already here

    gtk2="gtk-2.0"
    gtk3="gtk-3.0"
    cinnamon="cinnamon"
    gnome="gnome"
    metacity="metacity"
    unity="unity"
    xfwm="xfwm4"


  if [ [ -d gtk2 ] || [ -d gtk3 ] || [ -d cinnamon ] || [ -d gnome ] || [ -d metacity] || [ -d unity ] || [ -d xfwm4]]
  then

       ## This means that the the theme folder (name) has to be created first
       cd ~/.theme
       mkdir $file

       ## At this point you are IN the extracted theme folder in the script dir

       # MV content of folder to the theme
       mv * $themeHome

  else
      # Just the contents of the parent folder need to be moved
      mv * $themeHome

  fi

}

function cleanLeftover
{
   cd ..

   # Removes the folder that gitDL made
   rm -rf $file

}


function debugPause
{
  read -p "Pause for Debugging"
  clear

}

####################################################
function scrub
{
    gtk2=""
    gtk3=""
    cinnamon=""
    gnome=""
    metacity=""
    unity=""
    xfwm=""

    url=""
    filename=""
    file=""

}

function extractAll
{

    if [ "${extfinal}" == 'targz' ]; then
         tar -zxvf $1

    elif [ "${extfinal}" == 'tar' ]; then
         tar -xvf $1

    elif [ "${extfinal}" == 'tgz' ]; then
         distro=Opensuse

    elif [ "${extfinal}" == 'tarxz' ]; then
        echo "Get code for this tarxz archive type"

    ## Double Check the ext on this one
    elif [ "${extfinal}" == 'tarbz' ]; then
       tar -xJf $1

    else
       echo "Debugging hello message"
    fi


    ## If tar + bzip =

}

function stripFileInfo
{
    #This is in Testing mode

  # get a URL from the theme function
  url=$1

  url2=${url}

  clear
  # Display Test for the full URl
  echo -e "\n\nFull URL is:\t $url2"

  filename=${url2##*/}

  # Display Test for Total file Extension
  echo -e "\nTotal Filename is:\t $filename"

  # Filename by itself
  file=${filename%%.*}
  echo -e "Filename by itself: \t $file"

  extonly=${filename#*.}

  # Strip Numbers
  extnonum=`echo "$extonly" | sed 's/[0-9]*//g' `

  # Strip Periods
  extfinal=`echo "$extnonum" | sed 's/\.//g' `

  ## Display Test for final output
  echo -e "Final Extension for test loop:\t $extfinal"

}
