distro=$(lsb_release -d)
release=$(lsb_release -r)

function tarClean
{
      # Cleanup function
      rm *.tar*

}

function stripFileInfo
{
    #This is in Testing mode

  # get a URL from the theme function
  url=$1

  url2=${url}

  clear
  # Display Test for the full URl
  echo -e "\n\nFull URL is:\t $url2"

  filename=${url2##*/}

  # Display Test for Total file Extension
  echo -e "\nTotal Filename is:\t $filename"

  # Filename by itself
  file=${filename%%.*}
  echo -e "Filename by itself: \t $file"

  extonly=${filename#*.}

  # Strip Numbers
  extnonum=`echo "$extonly" | sed 's/[0-9]*//g' `

  # Strip Periods
  extfinal=`echo "$extnonum" | sed 's/\.//g' `

  ## Display Test for final output
  echo -e "Final Extension for test loop:\t $extfinal"

}
#########################################
function extractAll
{

    if [ "${extfinal}" == 'targz' ]; then
         tar -zxvf $1

    elif [ "${extfinal}" == 'tar' ]; then
         tar -xvf $1

    elif [ "${extfinal}" == 'tgz' ]; then
         distro=Opensuse

    elif [ "${extfinal}" == 'tarxz' ]; then
        echo "Get code for this tarxz archive type"

    ## Double Check the ext on this one
    elif [ "${extfinal}" == 'tarbz' ]; then
       tar -xJf $1

    else
       echo "Debugging hello message"
    fi


    ## If tar + bzip =

}



function quitScript
{
    clear
    echo "Goodbye"
    exit
}

function invalidSection
{
    echo "invalid selection "
        sleep 2s
        x=1
}

#####################################
# Ideas below

# Logic problem:   I'd have to know whats in the archive before extracting it
## for now use the mv "me"

function themePath
{
    # Detect contents of parent theme  folder (do something scalable)

    ## You should be in the theme's directory, set by a prior function already here

    gtk2="gtk2"
    gtk3="gtk3"
    cinnamon="cinnamon"
    gnome="gnome"


  if [ [ -d gtk2 ] || [ -d gtk3 ] || [ -d cinnamon ] || [ -d gnome ] ]; then

       # Code to make the filename directory in .themes is to be placed here
       echo -e "This is a place holder message "

       # create a folder with the file name (check to see if it exists already?) in the ~/.theme folder
  else
      # Code to just extract the parent folder of the theme (which is already in the name of the theme ) to .Themes

  fi


}

# 1000% not sure if this is needed but have a reset/scrub script for variables setting the values back to null
# This can be useful for when i add loops to the menus ... setting "URL" again may do this anyone but logically
# looking at it, it's easy with all the variables cleared out so there is no leftover stuff when installing a second
# Theme, from the first theme install, lets say
